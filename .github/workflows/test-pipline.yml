name: Challange test pipline
on: [push, pull_request]
env:
  env_var: ${{ vars.dev }}

jobs:
  test:
    runs-on: ubuntu-latest
    environment: dev
    env:
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      SECRET_KEY: ${{ vars.SECRET_KEY}}
      ALGORITHM: ${{ vars.ALGORITHM}}
      CELERY_BROKER_URL: ${{ vars.CELERY_BROKER_URL}}
      CELERY_RESULT_BACKEND: ${{ vars.CELERY_RESULT_BACKEND}}

    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379

    steps:
      - name: Clone repo
        uses: actions/checkout@v4

      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install pipenv
        run: pip install pipenv

      - name: Install project dependencies
        run: pipenv install --dev

      - name: Run tests
        run: pipenv run pytest -s -x --cov=challange_api -vv --cov-report=xml
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          SECRET_KEY: ${{ vars.SECRET_KEY}}
          ALGORITHM: ${{ vars.ALGORITHM}}
          CELERY_BROKER_URL: ${{ vars.CELERY_BROKER_URL}}
          CELERY_RESULT_BACKEND: ${{ vars.CELERY_RESULT_BACKEND}}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}